#ifndef ACTOR_H_
#define ACTOR_H_

#include "GraphObject.h"

// Students:  Add code to this file, Actor.cpp, StudentWorld.h, and StudentWorld.cpp

//	WHATS IN A GRAPHOBJECT??? THIS:
/*
			

GraphObject(int imageID, double startX, double startY,
int startDirection = 0, int depth = 0);

// A NOTE ABOUT DEPTH:

In
Kontagion, all bacteria and Socrates are at depth 0, and all other game actors are at depth
1, ensuring our active characters are in the foreground.
//

double getX() const; // in pixels (0-255)
double getY() const; // in pixels (0-255)
void moveTo(double x, double y); // in pixels (0-255)
23

// moveAngle() moves the actor the specified number of units in the
// specified direction.

void moveAngle(Direction angle, int units = 1);

// getPositionInThisDirection() returns a new (x, y) location in the
// specified direction and distance, based on the passed-in angle and the
// GraphObject’s current (x, y) location.

void getPositionInThisDirection(Direction angle, int units,
 double &dx, double &dy);

int getDirection() const; // in degrees (0-359)

void setDirection(Direction d); // in degrees (0-359)
*/

class StudentWorld;

class Actor : public GraphObject
{
public:

	Actor(StudentWorld* world, int imageID, double startX, double startY, 
		Direction dir = 0, int depth = 1, double size = 1.0) 
		: GraphObject(imageID, startX, startY, dir, depth, size) 
	{
		m_studentWorld = world;
		m_dead = false;
	}

	//reference to studentWorld for actors

	StudentWorld* getWorld() { return  m_studentWorld; }

	virtual void doSomething() = 0;

	virtual void activate();

	virtual void setDead(bool state);
	virtual bool isDead() const;

private:
	bool m_dead;
	StudentWorld* m_studentWorld;
};
////////////////////////////////////////////////////////////
/////////////////END DECLARATION////////////////////////////
////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////
/////////////////SOCRATES CLASS DECLARATION/////////////////
////////////////////////////////////////////////////////////

class Socrates : public Actor
{
public:

	Socrates(StudentWorld* world)
		: Actor(world, IID_PLAYER, 0, 128, 1) //ImageID:Player x:0, y:128, depth:1
	{
		setHealth(100);
		m_sprayCharge = 20;
		m_flameCharge = 5;
		setTheta();
	}

	virtual void doSomething();

	virtual void takeDamage();

	int getHealth() const
	{
		return m_health;
	}

	void setHealth(int health)
	{
		m_health = health;
	}

	bool isDead() const
	{
		if (m_health == 0)
			return true;
		return false;
	}

	void setTheta();

	void polarToCartesian(int& x, int& y, int theta, int r = VIEW_RADIUS);

private:

	int m_health;

	int m_theta;

	Direction m_direction;
	int m_sprayCharge;
	int m_flameCharge;

	//need gameWorld pointer??

};

////////////////////////////////////////////////////////////
/////////////////END DECLARATION////////////////////////////
////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////
/////////////////DIRTPILE CLASS DECLARATION/////////////////
////////////////////////////////////////////////////////////

class DirtPile :
	public Actor
{
public:

	DirtPile(StudentWorld* world, double startX, double startY)
		: Actor(world, IID_DIRT, startX, startY, 0, 1) //ImageID:Player, ..., dir:0, depth:1
	{

	}

	virtual void doSomething();

private:

};

////////////////////////////////////////////////////////////
/////////////////END DECLARATION////////////////////////////
////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////
/////////////////SPRAY CLASS DECLARATION////////////////////
////////////////////////////////////////////////////////////

class Spray : public Actor
{

};

////////////////////////////////////////////////////////////
/////////////////END DECLARATION////////////////////////////
////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////
/////////////////FLAME CLASS DECLARATION////////////////////
////////////////////////////////////////////////////////////

class Flame : public Actor
{

};

////////////////////////////////////////////////////////////
/////////////////END DECLARATION////////////////////////////
////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////
/////////////////PIT CLASS DECLARATION//////////////////////
////////////////////////////////////////////////////////////

class Pit : public Actor
{

};

////////////////////////////////////////////////////////////
/////////////////END DECLARATION////////////////////////////
////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////
/////////////////BACTERIA CLASS DECLARATION/////////////////
////////////////////////////////////////////////////////////

class Bacteria : public Actor
{

};

////////////////////////////////////////////////////////////
/////////////////END DECLARATION////////////////////////////
////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////
/////////////////SALMONELLA CLASS DECLARATION///////////////
////////////////////////////////////////////////////////////

class Salmonella : public Bacteria
{

};

////////////////////////////////////////////////////////////
/////////////////END DECLARATION////////////////////////////
////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////
/////////////////AGGRO_SALMONELLA CLASS DECLARATION/////////
////////////////////////////////////////////////////////////

class AggroSalmonella : public Bacteria
{

};

////////////////////////////////////////////////////////////
/////////////////END DECLARATION////////////////////////////
////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////
/////////////////ECOLI CLASS DECLARATION////////////////////
////////////////////////////////////////////////////////////

class EColi : public Bacteria
{

};

////////////////////////////////////////////////////////////
/////////////////END DECLARATION////////////////////////////
////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////
/////////////////CONSUMABLE CLASS DECLARATION///////////////
////////////////////////////////////////////////////////////

class Consumable : public Actor
{

};

////////////////////////////////////////////////////////////
/////////////////END DECLARATION////////////////////////////
////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////
/////////////////FOOD CLASS DECLARATION/////////////////////
////////////////////////////////////////////////////////////

class Food : public Consumable
{

};

////////////////////////////////////////////////////////////
/////////////////END DECLARATION////////////////////////////
////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////
/////////////////FLAMEG CLASS DECLARATION///////////////////
////////////////////////////////////////////////////////////

class FlameG : public Consumable
{

};

////////////////////////////////////////////////////////////
/////////////////END DECLARATION////////////////////////////
////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////
/////////////////HEALTHG CLASS DECLARATION//////////////////
////////////////////////////////////////////////////////////

class HealthG : public Consumable
{

};

////////////////////////////////////////////////////////////
/////////////////END DECLARATION////////////////////////////
////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////
/////////////////LIFEG CLASS DECLARATION////////////////////
////////////////////////////////////////////////////////////

class LifeG : public Consumable
{

};

////////////////////////////////////////////////////////////
/////////////////END DECLARATION////////////////////////////
////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////
/////////////////FUNGUS CLASS DECLARATION///////////////////
////////////////////////////////////////////////////////////

class Fungus : public Consumable
{

};

#endif // ACTOR_H_
